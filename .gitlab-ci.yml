stages:
  - check
  - install

variables:
  REPO_NAME: "hep-forge"
  
default:
  image: apnpucky/gentoo-hep-forge
  before_script:
    - emaint -r ${REPO_NAME} sync

resummino:
  stage: install
  parallel:
    matrix:
      - PKG: [resummino]
        VERSION: [3.1.1]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --extra-env-file 'test.conf' --test-feature-scope always --report report.json
    - $PKG --help
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"

yoda:
  stage: install
  parallel:
    matrix:
      - PKG: [yoda]
        VERSION: [1.9.5-r2]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "!root ^^ ( python_single_target_python3_11 python_single_target_python3_10  python_single_target_python3_9 python_single_target_python3_8 )" -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"

hepmc:
  stage: install
  parallel:
    matrix:
      - PKG: [hepmc]
        VERSION: [2.06.11, 3.2.5]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "!root ^^ ( python_single_target_python3_11 python_single_target_python3_10 python_single_target_python3_9 python_single_target_python3_8 )" -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"

pythia:
  stage: install
  parallel:
    matrix:
      - PKG: [pythia]
        VERSION: [8.2.45-r1]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always --append-required-use '!root' -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks

rivet:
  stage: install
  parallel:
    matrix:
      - PKG: [rivet]
        VERSION: [3.1.5, 3.1.6]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks

fastjet:
  stage: install
  parallel:
    matrix:
      - PKG: [fastjet]
        VERSION: [3.4.0, 3.4.0-r1, 3.0.6-r3]
        CATEGORY: ['sci-physics']
      - PKG: [fastjet-contrib]
        VERSION: ['1.049']
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks

qgraf:
  stage: install
  parallel:
    matrix:
      - PKG: [qgraf]
        VERSION: [3.6.3, 3.5.2, 3.4.2]
        CATEGORY: ['sci-physics']
  script:
    - pkg-testing-tool --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "!root ^^ ( python_single_target_python3_11 python_single_target_python3_10 python_single_target_python3_9 python_single_target_python3_8 )" -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"
  artifacts:             
      paths:                 
           - "report.json" 
      expire_in: 2 weeks

local-repoman:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script: []
  script:
    - repoman full -d
    - repoman -vx full

repoman:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script:
    - echo "[${REPO_NAME}]">> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "location = /var/db/repos/${REPO_NAME}" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-type = git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-uri = https://gitlab.com/APN-Pucky/gentoo-${REPO_NAME}.git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - emaint -r ${REPO_NAME} sync
  script:
    - cd /var/db/repos/${REPO_NAME}
    - repoman -vdx full

local-pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script: []
  script:
    - pkgcheck scan --exit 
    
pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script:
    - echo "[${REPO_NAME}]">> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "location = /var/db/repos/${REPO_NAME}" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-type = git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-uri = https://gitlab.com/APN-Pucky/gentoo-${REPO_NAME}.git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - emaint -r ${REPO_NAME} sync
  script:
    - pkgcheck ci -r ${REPO_NAME} --exit 
