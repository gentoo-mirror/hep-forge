stages:
  - check
  - install

variables:
  REPO_NAME: "hep-forge"
  
default:
  image: apnpucky/gentoo-hep-forge
  before_script:
    - emaint -r ${REPO_NAME} sync

all:
  stage: install
  parallel:
    matrix:
      - PKG: [resummino]
        VERSION: [3.1.1]
        CATEGORY: ['sci-physics']
      - PKG: [mcfm]
        VERSION: [10.2.1]
        CATEGORY: ['sci-physics']
      - PKG: [yoda]
        VERSION: [1.9.5-r1]
        CATEGORY: ['sci-physics']
      - PKG: [hepmc]
        VERSION: [2.06.11, 3.2.5]
        CATEGORY: ['sci-physics']
      - PKG: [pythia]
        VERSION: [8.2.45-r1]
        CATEGORY: ['sci-physics']
      - PKG: [rivet]
        VERSION: [3.1.5, 3.1.6]
        CATEGORY: ['sci-physics']
      - PKG: [fastjet]
        VERSION: [3.4.0, 3.4.0-r1, 3.0.6-r3]
        CATEGORY: ['sci-physics']
      - PKG: [fastjet-contrib]
        VERSION: ['1.049']
        CATEGORY: ['sci-physics']
      - PKG: [qgraf]
        VERSION: [3.6.3, 3.5.2, 3.4.2]
        CATEGORY: ['sci-physics']
      - PKG: [topdrawer]
        VERSION: ['9999']
        CATEGORY: ['sci-physics']
      - PKG: [looptools]
        VERSION: ['2.16', '2.15']
        CATEGORY: ['sci-physics']
      - PKG: [lhapdf]
        VERSION: ['6.5.1']
        CATEGORY: ['sci-physics']
  script:
    - if grep -q "python-single-r1" $CATEGORY/$PKG/$PKG-$VERSION.ebuild; 
      then
        inherit() { sleep 0; } &&
        source $CATEGORY/$PKG/$PKG-$VERSION.ebuild && 
        for PY in ${PYTHON_COMPAT[@]}; do
          PYTHON_SINGLE_TARGET="$PY" pkg-testing-tool --max-use-combinations 32 --ccache --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "^^ ( python_single_target_python3_11 python_single_target_python3_10  python_single_target_python3_9 python_single_target_python3_8 ) -root python_single_target_$PY" -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report-$PY.json | tee -a out.log ;
        done;
      else
        pkg-testing-tool --max-use-combinations 32 --ccache --extra-env-file 'test.conf' --test-feature-scope always --append-required-use '!root' -p "=$CATEGORY/$PKG-$VERSION::${REPO_NAME}" --report report.json | tee out.log; 
      fi
    - (! grep -A5 -B5 "QA Notice" out.log)
  artifacts:             
      paths:
           - "out.log"          
           - "report*.json" 
      expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION.ebuild"
      - "$CATEGORY/$PKG/metadata.xml"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"

local-repoman:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script: []
  script:
    - repoman full -d
    - repoman -vx full

repoman:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script:
    - echo "[${REPO_NAME}]">> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "location = /var/db/repos/${REPO_NAME}" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-type = git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-uri = https://gitlab.com/APN-Pucky/gentoo-${REPO_NAME}.git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - emaint -r ${REPO_NAME} sync
  script:
    - cd /var/db/repos/${REPO_NAME}
    - repoman -vdx full

local-pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script: []
  script:
    - pkgcheck scan --exit 
    
pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script:
    - echo "[${REPO_NAME}]">> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "location = /var/db/repos/${REPO_NAME}" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-type = git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-uri = https://gitlab.com/APN-Pucky/gentoo-${REPO_NAME}.git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - emaint -r ${REPO_NAME} sync
  script:
    - pkgcheck ci -r ${REPO_NAME} --exit 
