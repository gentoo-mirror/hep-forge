stages:
  - check
  - build
  - test
  - qa

variables:
  REPO_NAME: "hep-forge"

default:
  image: apnpucky/gentoo-hep-forge:latest

.config:
  parallel:
    matrix:
      - PKG: [cuba]
        VERSION: ['4.2.2','4.2','3.3']
        CATEGORY: ['sci-libs']
      - PKG: [resummino]
        VERSION: [3.1.1]
        CATEGORY: ['sci-physics']
      - PKG: [handyg]
        VERSION: [0.1.5]
        CATEGORY: ['sci-libs']
      - PKG: [oneloop]
        VERSION: [2020.07.31]
        CATEGORY: ['sci-physics']
      - PKG: [qcdloop]
        VERSION: [2.0.9, 2.0.5]
        CATEGORY: ['sci-physics']
      - PKG: [mcfm]
        VERSION: ['10.2.1']
        CATEGORY: ['sci-physics']
      - PKG: [yoda]
        VERSION: [9999, 1.9.7, 1.9.5]
        CATEGORY: ['sci-physics']
      - PKG: [hepmc]
        VERSION: [9999, 3.2.5, 2.06.11]
        CATEGORY: ['sci-physics']
      - PKG: [pythia]
        VERSION: [9999, 8.3.07, 8.2.45]
        CATEGORY: ['sci-physics']
      - PKG: [rivet]
        VERSION: [9999, 3.1.7, 3.1.6, 3.1.5]
        CATEGORY: ['sci-physics']
      - PKG: [fastjet]
        VERSION: [3.4.0]
        CATEGORY: ['sci-physics']
      - PKG: [fastjet-contrib]
        VERSION: ['1.049']
        CATEGORY: ['sci-physics']
      - PKG: [qgraf]
        VERSION: [3.6.5, 3.5.2, 3.4.2]
        CATEGORY: ['sci-physics']
      - PKG: [topdrawer]
        VERSION: ['9999']
        CATEGORY: ['sci-physics']
      - PKG: [looptools]
        VERSION: ['2.16', '2.15']
        CATEGORY: ['sci-physics']
      - PKG: [lhapdf]
        VERSION: [9999, 6.5.3, 6.5.2, 6.3.0, 6.2.3-r1]
        CATEGORY: ['sci-physics']
      - PKG: [madgraph]
        VERSION: [3.3.2, 2.9.9]
        CATEGORY: ['sci-physics']
      - PKG: [easybuild]
        VERSION: [4.6.2]
        CATEGORY: ['sys-cluster']
      - PKG: [lmod]
        VERSION: [8.6.14-r1]
        CATEGORY: ['sys-cluster']
      - PKG: [poetry-dynamic-versioning]
        VERSION: [9999,0.21.1]
        CATEGORY: ['dev-python']
      - PKG: [smpl]
        VERSION: [9999,1.0.2]
        CATEGORY: ['dev-python']
      - PKG: [deep-translator]
        VERSION: [9999,1.9.1]
        CATEGORY: ['dev-python']
      - PKG: [metamorph]
        VERSION: [9999,0.0.13]
        CATEGORY: ['dev-python']
      - PKG: [xsdata]
        VERSION: ['22.11']
        CATEGORY: ['dev-python']
  before_script:
    - emaint -r ${REPO_NAME} sync
    - echo 'dev-util/hermes ~amd64' >> /etc/portage/package.accept_keywords/zz-autoaccept
    - echo 'dev-python/uncertainties ~amd64' >> /etc/portage/package.accept_keywords/zz-autoaccept
    - echo 'dev-python/toposort ~amd64' >> /etc/portage/package.accept_keywords/zz-autoaccept
    - echo '*/*::hep-forge ~amd64' > /etc/portage/package.accept_keywords/hepforge
    - echo "=$CATEGORY/$PKG-$VERSION*::hep-forge **" >> /etc/portage/package.accept_keywords/hepforge
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" || $TEST_ALL == "1" || $PROBABILITY
      changes:
      - "$CATEGORY/$PKG/$PKG-$VERSION*.ebuild"
      - "$CATEGORY/$PKG/metadata.xml"
      - "$CATEGORY/$PKG/Manifest"
      - "$CATEGORY/$PKG/files/*"
      - "$CATEGORY/$PKG/.build"
      - ".build"

local-pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script: []
  script:
    - pkgcheck scan --exit
    
global-pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  stage: check
  before_script:
    - echo "[${REPO_NAME}]">> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "location = /var/db/repos/${REPO_NAME}" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-type = git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - echo "sync-uri = https://gitlab.com/APN-Pucky/gentoo-${REPO_NAME}.git" >> /etc/portage/repos.conf/${REPO_NAME}.conf
    - emaint -r ${REPO_NAME} sync
  script:
    - pkgcheck ci -r ${REPO_NAME} --exit

pkgcheck:
  image: apnpucky/gentoo-ebuild-ci
  extends: .config
  stage: check
  before_script: []
  script:
    - if [[ -n $PROBABILITY ]] && [[ $(( RANDOM % 101 )) -gt $PROBABILITY ]] ; then exit 137 ; fi
    - pkgcheck scan $CATEGORY/$PKG --exit 
  allow_failure:
    exit_codes: 137

pkgwarn:
  image: apnpucky/gentoo-ebuild-ci
  extends: .config
  stage: check
  before_script: []
  script:
    - if [[ -n $PROBABILITY ]] && [[ $(( RANDOM % 101 )) -gt $PROBABILITY ]] ; then exit 137 ; fi
    - pkgcheck scan $CATEGORY/$PKG --exit warning || exit 137
  allow_failure:
    exit_codes: 137

build:
  stage: build
  needs: []
  extends: .config
  script:
    - if [[ -n $PROBABILITY ]] && [[ $(( RANDOM % 101 )) -gt $PROBABILITY ]] ; then exit 137 ; fi
    - USE="-root" emerge "=$CATEGORY/$PKG-$VERSION*::${REPO_NAME}" | tee "build_$CATEGORY_$PKG-$VERSION.log"; 
  artifacts:     
      when: always        
      paths:
           - "build_*.log"
      expire_in: 1 week
  allow_failure:
    exit_codes: 137


test:
  stage: test
  extends: .config
  script:
    - if [[ -n $PROBABILITY ]] && [[ $(( RANDOM % 101 )) -gt $PROBABILITY ]] ; then exit 137 ; fi
    - if grep -q "python-single-r1" $CATEGORY/$PKG/$PKG-$VERSION*.ebuild; 
      then
        inherit() { sleep 0; } &&
        source $CATEGORY/$PKG/$PKG-$VERSION*.ebuild && 
        for PY in ${PYTHON_COMPAT[@]}; do
          PYTHON_SINGLE_TARGET="$PY" pkg-testing-tool --max-use-combinations 32 --ccache --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "^^ ( python_single_target_python3_11 python_single_target_python3_10  python_single_target_python3_9 python_single_target_python3_8 ) python_single_target_$PY -root" -p "=$CATEGORY/$PKG-$VERSION*::${REPO_NAME}" --report test_$CATEGORY_$PKG-$VERSION-$PY.json | tee -a test_$CATEGORY_$PKG-$VERSION-$PY.log ;
        done;
      else
        if grep -q "lua-single" $CATEGORY/$PKG/$PKG-$VERSION*.ebuild; 
        then
          inherit() { sleep 0; } &&
          source $CATEGORY/$PKG/$PKG-$VERSION*.ebuild && 
          for LUA in ${LUA_COMPAT[@]}; do
            LUA_SINGLE_TARGET="$LUA" pkg-testing-tool --max-use-combinations 32 --ccache --extra-env-file 'test.conf' --test-feature-scope always --append-required-use "^^ ( lua_single_target_lua5-1 lua_single_target_lua5-2 lua_single_target_lua5-3 ) lua_single_target_$LUA -root" -p "=$CATEGORY/$PKG-$VERSION*::${REPO_NAME}" --report test_$CATEGORY_$PKG-$VERSION-$LUA.json | tee -a test_$CATEGORY_$PKG-$VERSION-$LUA.log ;
          done;
        else
          pkg-testing-tool --max-use-combinations 32 --ccache --extra-env-file 'test.conf' --append-required-use "!root" --test-feature-scope always -p "=$CATEGORY/$PKG-$VERSION*::${REPO_NAME}" --report test_$CATEGORY_$PKG-$VERSION.json | tee "test_$CATEGORY_$PKG-$VERSION.log"; 
        fi
      fi
  artifacts:     
      when: always        
      paths:
           - "test_*.log"          
           - "test*.json" 
      expire_in: 1 week
  allow_failure:
    exit_codes: 137

qa:
  stage: qa
  extends: .config
  script:
    - ls *.log
    - (! grep -A5 -B5 "QA Notice" test_$CATEGORY_$PKG-$VERSION*.log)
  allow_failure: true


